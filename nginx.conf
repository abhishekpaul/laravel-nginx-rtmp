user http http;
worker_processes  2;

# error_log  /var/log/nginx/error.log debug;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

rtmp {
    server {
        listen 1935;
        allow play all;
        notify_method get;
        max_streams 128;
        chunk_size 128;

        #creates our primary live rtmp stream
        application live {
            on_publish "http://127.0.0.1/auth";
            allow play all;
            live on;
            exec_kill_signal term;
            exec php /path/to/this/install/artisan stream:transcode $name; #artisan must be appended to install path
            record off;
            wait_key on;
            wait_video on;
            exec_publish_done php /path/to/this/install/artisan stream:transcode $name --stop; #artisan must be appended to install path
        }
        #creates our adaptive bitrate HLS videostream from our transcoded streams and tells where to put the HLS video manifest and video fragments
        application show {
            on_publish "http://127.0.0.1/auth";
            live on;
            hls on;
            hls_nested on;
            hls_path /HLS/live;
            hls_type live;
            hls_fragment 1s;
            hls_playlist_length 4h;
            hls_cleanup off;
            hls_variant _low BANDWIDTH=288000; # Low bitrate, sub-SD resolution
            hls_variant _mid BANDWIDTH=448000; # Medium bitrate, SD resolution
            hls_variant _high BANDWIDTH=1152000; # High bitrate, higher-than-SD resolution
            hls_variant _src BANDWIDTH=2048000; # High bitrate, native 720p resolution
        }
    }
}

http {
    server_names_hash_bucket_size 64;
    include       mime.types;
    default_type  application/octet-stream;
    charset UTF-8;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile off;
    tcp_nopush on;
    aio on;
    directio 512;

    keepalive_timeout  65;

    client_max_body_size 0;

    upstream php {
        server unix:/var/run/php-fpm/php-fpm.sock;
    }

    #this points to the same install as the public facing site. This is for the server to make rtmp auth checks bypassing key checks for transcodes
    #hardcoded to ip address so there can be no doubt that this is accessed only by the server itself
    server {
        listen 127.0.0.1:80;
        access_log  /var/log/nginx/localhost.access.log;
        error_log  /var/log/nginx/localhost.error.log;
        root   /path/to/this/install/public; #public must be appended to install path
        index index.php;
        try_files $uri $uri/ /index.php?$args;
        location ~ .php$ {
            fastcgi_split_path_info ^(.+\.php)(.*)$;
            fastcgi_pass   php;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /path/to/this/install/public$fastcgi_script_name; #public must be appended to install path
            include fastcgi_params;
            fastcgi_intercept_errors        on;
            fastcgi_ignore_client_abort     off;
            fastcgi_connect_timeout 60;
            fastcgi_send_timeout 180;
            fastcgi_read_timeout 180;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
            fastcgi_temp_file_write_size 256k;
        }
    }
    #highly recommend ssl setup to take advantage of http2
    server {
        listen 443 http2 ssl;
        listen [::]:443 http2 ssl;
        ssl_certificate       /path/to/cert.crt;
        ssl_certificate_key   /path/to/cert.key;
        server_name  mydomain;
        access_log  /var/log/nginx/mydomain.access.log;
        error_log  /var/log/nginx/mydomain.error.log;
        root   /path/to/this/install/public; #public must be appended to install path
        index  index.php;
        try_files $uri $uri/ /index.php?$args;
        #creates the http-location for our adaptive bitrate HLS stream - "https://mydomain/live/my-stream-name.m3u8"
        #for tracking, you shouldn't give this url out directly
        #instead your players should generate a playback token (sha256 of current time works great) which is paired with a serverside token for their session for identification.
        #the public url will look like "https://mydomain/stream/my-stream-name/playbacktoken"
        #the system will handle the redirect
        #the system includes a built-in web player accessible at "https://mydomain/player/my-stream-name"
        location /live {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/MP2T .ts;
            }
            alias /HLS/live; #please create this directory and ensure nginx user account has read/write access (http in this config)
            if_modified_since off;
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            add_header Last-Modified "";
            etag off;
            add_header Cache-Control "no-cache";
        }

        location ~ .php$ {
            fastcgi_split_path_info ^(.+\.php)(.*)$;
            fastcgi_pass   php;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /path/to/this/install/public$fastcgi_script_name; #public must be appended to install path
            include fastcgi_params;
            fastcgi_intercept_errors        on;
            fastcgi_ignore_client_abort     off;
            fastcgi_connect_timeout 60;
            fastcgi_send_timeout 180;
            fastcgi_read_timeout 180;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
            fastcgi_temp_file_write_size 256k;
        }
    }
    server {
        listen 80;
        listen [::]:80;
        server_name rtmp.theeternalsw0rd.rocks;
        return 301 https://$host$request_uri;
    }

    #inadvisable to load other sites using this config. this line included for development and testing boxes
    include /etc/nginx/sites-enabled/*;
}
